package com.learning.scala.classobj

/* Scala: как переопределить getter/setter методы с присваиванием полей если требуется добавить собственную логику? */

/*
 * В Java мы могли бы иметь логику в getter/setter методах...
 * Scala-компилятор генерирует getter/setter методы для полей которые были объявленных с помощью val/var.
 * Несуществует никакого простого способа чтобы сделать то же в языке-Scala.
 * (#1) Переименовать поле; (#2) Пометить как 'private'; (#3) Пересоздать и присвоить;
 */

class User {

  /*
   * #1  Переименовать поле - давайте скажем что первоначальное имя поля было "id" и теперь оно переименовано как "_id" с 'private' декларацией
   * #2  пометить как 'private' - будет сгенерированно 'private getter' (с именем "_id") и setter (с именем "_id_")
   */
  private var _id = ""

  /* #3  Пересоздать setter и getter - теперь пересоздаст и присвоит для поля "ID" */
  def id = _id // getter-метод возвращает значение поля "_id"

  def id_=(value: String) { // setter-метод
    /* логика: метода-синглтона... */
    if(_id.isEmpty())
      _id = value	// это устанавливает в поле значение "_id"
  }
}

object User {
  def main(agrs: Array[String]) {
    val u1 = new User()

    u1.id = "001" // вызов setter-метода для поля "id"
    println("before - " + u1.id) // использование getter-метода для поля "id"

    u1.id = "002"
    println("after - " + u1.id)
  }
}
